<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgAccount.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>